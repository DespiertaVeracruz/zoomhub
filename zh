#!/bin/bash

# HACK: Support specifying a different hosts file for non-production envs,
# e.g. `./zh setup deployment/hosts.staging`.
# TODO: Move this logic into specific commands, or use an arg parser?
hosts="ops/$3"
if [ -z "$3" ]; then
  hosts=ops/staging
fi

# Helpers
separator () {
    echo '------------------------------------------------------------------------------'
}

# Commands
case "$1" in
init)
    brew install https://raw.githubusercontent.com/Homebrew/homebrew/bda8d64e0e9011aab1612868eac2f709e631c503/Library/Formula/haskell-stack.rb
    stack setup
    ;;
lint)
    git diff-files --quiet
    HAS_GIT_UNSTAGED_CHANGES=$?
    if [[ "$HAS_GIT_UNSTAGED_CHANGES" != "0" ]] ; then
        echo 'Commit all changes to Git before running `./zh lint`'
        exit 1
    fi
    git ls-files | grep '.hs$' | xargs stylish-haskell --inplace
    ;;
ops)
    case "$2" in
    create-admin-user)
        separator
        echo 'WARNING: Running ./zh ops create-admin-user more than once will'
        echo '         fail as `root` user will no longer have password access'
        echo '         to the server.'
        separator
        echo "Hosts:   $(basename $hosts)"
        separator
        echo 'Enter `root` SSH password:'
        ansible-playbook --inventory-file "${hosts}" \
            ops/user.yml --user root --ask-pass \
            --extra-vars "sudoers=y username=admin"
        ;;
    ping)
        ansible --inventory-file ${hosts} all -m ping
        ;;
    setup)
        separator
        echo "Hosts:   $(basename $hosts)"
        separator
        echo 'Enter `admin` user password:'
        ansible-playbook --inventory-file "${hosts}" \
            ops/bootstrap.yml --ask-sudo
        ;;
    *)
        echo "Invalid command: $0 $@"
        exit 1
    esac
    ;;
run)
    stack build --file-watch --exec ./scripts/run-development.sh
    ;;
test)
    stack test
    ;;
*)
    echo "Unknown command: $1. Try: init|lint|ops|run|test"
    ;;
esac
