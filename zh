#!/bin/bash

hosts="ops/$3"
if [ -z "$3" ]; then
  hosts='ops/staging'
fi

# Helpers
separator () {
    echo '------------------------------------------------------------------------------'
}

ensure_rackspace_credentials () {
    if [ -z "$RAX_USERNAME" ]; then
        RAX_USERNAME='zoomingservice'
    fi

    if [ -z "$RAX_API_KEY" ]; then
        echo 'Please set `RAX_API_KEY` (Rackspace API key)'
        exit 1
    fi
}

print_hosts () {
    separator
    echo "Hosts:   $(basename $hosts)"
    separator
}

# Commands
case "$1" in
init)
    brew install https://raw.githubusercontent.com/Homebrew/homebrew/bda8d64e0e9011aab1612868eac2f709e631c503/Library/Formula/haskell-stack.rb
    stack setup
    ;;
lint)
    git diff-files --quiet
    HAS_GIT_UNSTAGED_CHANGES=$?
    if [[ "$HAS_GIT_UNSTAGED_CHANGES" != "0" ]] ; then
        echo 'Commit all changes to Git before running `./zh lint`'
        exit 1
    fi
    git ls-files | grep '.hs$' | xargs stylish-haskell --inplace
    ;;
ops)
    case "$2" in
    bootstrap)
        separator
        echo 'WARNING: Running ./zh ops bootstrap more than once will fail'
        echo '         as `root` user will no longer have password access to '
        echo '         the server.'
        separator
        echo "Hosts:   $(basename $hosts)"
        separator
        echo 'Enter `root` SSH password:'
        ansible-playbook --inventory-file "$hosts" \
            ops/user.yml --user root --ask-pass \
            --extra-vars "sudoers=y username=admin"
        ;;
    ping)
        print_hosts
        ansible --inventory-file "$hosts" all -m ping
        ;;
    setup-admin-server)
        ensure_rackspace_credentials

        ansible-playbook -v --inventory-file ops/admin --ask-sudo \
            --extra-vars="rackspace_username=$RAX_USERNAME \
                          rackspace_api_key=$RAX_API_KEY" \
            ops/admin.yml
        ;;
    setup-web-server)
        print_hosts
        ensure_rackspace_credentials

        echo 'Enter `admin` user password:'
        ansible-playbook -v --inventory-file "$hosts" --ask-sudo \
            --extra-vars="rackspace_username=$RAX_USERNAME \
                          rackspace_api_key=$RAX_API_KEY" \
            ops/web.yml
        ;;
    *)
        echo "Unknown command: $0 $@. Try $0 $1 \
bootstrap|ping|setup-admin-server|setup-server|setup-web-server"
        exit 1
    esac
    ;;
run)
    stack build --file-watch --exec ./scripts/run-development.sh
    ;;
test)
    stack test
    ;;
*)
    echo "Unknown command: $0 $@. Try: $0 init|lint|ops|run|test"
    ;;
esac
